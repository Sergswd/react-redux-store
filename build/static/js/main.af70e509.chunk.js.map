{"version":3,"sources":["store.js","components/shop-header/index.js","components/shop-header/shop-header.js","components/book-list-item/index.js","components/book-list-item/book-list-item.js","components/book-service-context/book-service-context.js","components/hoc/with-bookstore-service.js","actions/index.js","utils/compose.js","components/spinner/index.js","components/spinner/spinner.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/book-list/book-list.js","components/book-list/index.js","components/shopping-cart-table/shopping-cart-table.js","components/pages/home-page.js","components/pages/cart-page.js","components/app/index.js","components/app/app.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","services/bookstore-service.js","reducers/book-list.js","reducers/shopping-cart.js","reducers/index.js","index.js"],"names":["timeout","ShopHeader","connect","shoppingCart","cartItems","total","orderTotal","count","reduce","acc","cur","className","to","href","BookListItem","book","onAddedToCart","title","author","price","coverImage","src","alt","onClick","React","createContext","BookstoreServiceProvider","Provider","BookstoreServiceConsumer","Consumer","withBookstoreService","Wrapped","props","bookstoreService","bookAddedToCart","bookId","type","payload","fetchBooks","dispatch","getBooks","then","data","catch","err","compose","funcs","comp","reduceRight","wrapped","f","Spinner","ErrorIndicator","BookList","books","map","id","BookListContainer","this","loading","error","Component","bookList","bindActionCreators","mapDispatchToProps","onIncrease","onDecrease","onDelete","items","item","idx","HomePage","CartPage","App","role","path","component","exact","ErrorBoundry","state","hasError","setState","children","BookstoreService","Promise","resolve","setTimeout","updateBookList","action","undefined","updateCartItems","slice","updateOrder","quantity","find","itemIndex","findIndex","newItem","updateCartItem","updateShoppingCart","reducer","store","createStore","applyMiddleware","thunkMiddleware","next","getState","bookStoreService","ReactDom","render","value","document","getElementById"],"mappings":"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","file":"static/js/main.af70e509.chunk.js","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport reducer from './reducers';\r\n\r\n\r\nconst logMiddleware = ({ getState }) => (next) => (action) => {\r\n  // console.log(action.type, getState());\r\n  return next(action);\r\n};\r\n\r\nconst stringMiddleware = () => (next) => (action) => {\r\n  if (typeof action === 'string') {\r\n    return next({\r\n      type: action\r\n    });\r\n  }\r\n\r\n  return next(action);\r\n};\r\n\r\nconst store = createStore(reducer, applyMiddleware(\r\n  thunkMiddleware, stringMiddleware, logMiddleware));\r\n\r\n\r\nconst delayedActionCreator = (timeout) => (dispatch) => {\r\n  setTimeout(() => dispatch({\r\n    type: 'DELAYED_ACTION'\r\n  }), timeout);\r\n};\r\n\r\nstore.dispatch(delayedActionCreator(3000));\r\n\r\nexport default store;","import ShopHeader from './shop-header';\r\n\r\nexport default ShopHeader;","import React from 'react';\r\nimport './shop-header.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst ShopHeader = ({ cartItems, total }) => {\r\n  const count = cartItems.reduce((acc, cur) => {\r\n    return acc += cur.count\r\n  }, 0);\r\n  return (\r\n    <header className=\"shop-header row\">\r\n      <Link to=\"/\">\r\n        <div className=\"logo text-dark\" href=\"#\">ReStore</div>\r\n      </Link>\r\n      <Link to=\"/cart\">\r\n        <div className=\"shopping-cart\">\r\n          <i className=\"cart-icon fa fa-shopping-cart\" />\r\n          {count} items (${total})\r\n        </div>\r\n      </Link>\r\n    </header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ shoppingCart: { cartItems, orderTotal }}) => {\r\n  return {\r\n    cartItems,\r\n    total: orderTotal\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ShopHeader);","import BookListItem from './book-list-item';\r\n\r\nexport default BookListItem;","import React from 'react';\r\nimport './book-list-item.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst BookListItem = ({book, onAddedToCart}) => {\r\n  const { title, author, price, coverImage } = book;\r\n\r\n  return (\r\n    <div className=\"book-list-item\">\r\n      <div className=\"book-cover\">\r\n        <img src={coverImage} alt=\"cover\"/>\r\n      </div>\r\n      <div className=\"book-details\">\r\n        <Link to=\"#\">\r\n          <div className=\"book-title\">{title}</div>\r\n        </Link>\r\n        <div className=\"book-author\">{author}</div>\r\n        <div className=\"book-price\">${price}</div>\r\n        <button \r\n          onClick={onAddedToCart}\r\n          className=\"btn btn-info add-to-cart\">Add to cart</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookListItem;\r\n","import React from 'react';\r\n\r\nconst {\r\n  Provider: BookstoreServiceProvider,\r\n  Consumer: BookstoreServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n  BookstoreServiceProvider,\r\n  BookstoreServiceConsumer\r\n};","import React from 'react';\r\nimport { BookstoreServiceConsumer } from '../book-service-context';\r\n\r\nconst withBookstoreService = () => (Wrapped) => {\r\n  \r\n  return (props) => {\r\n    return (\r\n      <BookstoreServiceConsumer>\r\n        {\r\n          (bookstoreService) => {\r\n            return (<Wrapped {...props} bookstoreService={bookstoreService} />)\r\n          }\r\n        }\r\n      </BookstoreServiceConsumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withBookstoreService;","const booksRequested = () => {\r\n  return {\r\n    type: 'FETCH_BOOKS_REQUEST',\r\n  };\r\n};\r\n\r\nconst booksLoaded = (newBooks) => {\r\n  return {\r\n    type: 'FETCH_BOOKS_SUCCESS',\r\n    payload: newBooks,\r\n  };\r\n};\r\n\r\nconst booksError = (error) => {\r\n  return {\r\n    type: 'FETCH_BOOKS_FAILURE',\r\n    payload: error\r\n  };\r\n};\r\n\r\nexport const bookAddedToCart = (bookId) => {\r\n  return {\r\n    type: 'BOOK_ADDED_TO_CART',\r\n    payload: bookId\r\n  };\r\n};\r\n\r\nexport const bookRemovedFromCart = (bookId) => {\r\n  return {\r\n    type: 'BOOK_REMOVED_FROM_CART',\r\n    payload: bookId\r\n  };\r\n};\r\n\r\nexport const allBooksRemovedFromCart = (bookId) => {\r\n  return {\r\n    type: 'ALL_BOOKS_REMOVED_FROM_CART',\r\n    payload: bookId\r\n  };\r\n};\r\n\r\n// const fetchBooksOld = (bookstoreService, dispatch) => () => {\r\n//   dispatch(booksRequested());\r\n//   bookstoreService.getBooks()\r\n//     .then((data) => dispatch(booksLoaded(data)))\r\n//     .catch((err) => dispatch(booksError(err)));\r\n// };\r\n\r\nconst fetchBooks = (bookstoreService) => () => (dispatch) => {\r\n  dispatch(booksRequested());\r\n  bookstoreService.getBooks()\r\n    .then((data) => dispatch(booksLoaded(data)))\r\n    .catch((err) => dispatch(booksError(err)));\r\n};\r\n\r\nexport {\r\n  fetchBooks\r\n};","const compose = (...funcs) => (comp) => {\r\n  return funcs.reduceRight(\r\n    (wrapped, f) => f(wrapped), comp\r\n  )\r\n};\r\n\r\nexport default compose;","import Spinner from './spinner';\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"lds-css\">\r\n      <div className=\"lds-double-ring\">\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;","import ErrorIndicator from './error-indicator';\r\n\r\nexport default ErrorIndicator;\r\n","import React from 'react';\r\nimport './error-indicator.css';\r\n\r\nconst ErrorIndicator = () => {\r\n  return <div>Error!</div>;\r\n};\r\n\r\nexport default ErrorIndicator;","import React, { Component } from 'react';\r\nimport BookListItem from '../book-list-item';\r\n\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withBookstoreService } from '../hoc';\r\nimport { fetchBooks, bookAddedToCart } from '../../actions';\r\nimport { compose } from '../../utils';\r\n\r\nimport Spinner from '../spinner';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nimport './book-list.css';\r\n\r\nconst BookList = ({ books, onAddedToCart }) => {\r\n  return (\r\n    <ul className=\"book-list\">\r\n      {\r\n        books.map((book) => {\r\n          return (\r\n            <li key={book.id}>\r\n              <BookListItem\r\n                book={book}\r\n                onAddedToCart={() => onAddedToCart(book.id)}/>\r\n            </li>\r\n          );\r\n        })\r\n      }\r\n    </ul>\r\n  );\r\n};\r\n\r\nclass BookListContainer extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchBooks();\r\n  }\r\n\r\n  render() {\r\n    const { books, loading, error, onAddedToCart } = this.props;\r\n\r\n    if (loading) {\r\n      return <Spinner />;\r\n    }\r\n\r\n    if (error) {\r\n      return <ErrorIndicator />;\r\n    }\r\n\r\n    return <BookList books={books} onAddedToCart={onAddedToCart}/>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ bookList: { books, loading, error }}) => {\r\n  return { books, loading, error };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { bookstoreService }) => {\r\n\r\n  return bindActionCreators({\r\n    fetchBooks: fetchBooks(bookstoreService),\r\n    onAddedToCart: bookAddedToCart\r\n  }, dispatch);\r\n};\r\n\r\nexport default compose(\r\n  withBookstoreService(),\r\n  connect(mapStateToProps, mapDispatchToProps)\r\n)(BookListContainer);\r\n","import BookList from './book-list';\r\n\r\nexport default BookList;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  bookAddedToCart,\r\n  bookRemovedFromCart,\r\n  allBooksRemovedFromCart } from '../../actions';\r\n\r\nimport './shopping-cart-table.css';\r\n\r\nconst ShoppingCartTable = ({ items, total, onIncrease, onDecrease, onDelete }) => {\r\n  const renderRow = (item, idx) => {\r\n    const { id, title, count, total } = item;\r\n    return (\r\n      <tr key={id}>\r\n        <td>{idx + 1}</td>\r\n        <td>{title}</td>\r\n        <td>{count}</td>\r\n        <td>${total}</td>\r\n        <td>\r\n          <button\r\n            onClick={() => onDelete(id)}\r\n            className=\"float-right btn btn-outline-danger btn-sm\">\r\n            <i className=\"fa fa-trash-o\" />\r\n          </button>\r\n          <button\r\n            onClick={() => onIncrease(id)}\r\n            className=\"float-right btn btn-outline-success btn-sm\">\r\n            <i className=\"fa fa-plus-circle\" />\r\n          </button>\r\n          <button\r\n            onClick={() => onDecrease(id)}\r\n            className=\"float-right btn btn-outline-warning btn-sm\">\r\n            <i className=\"fa fa-minus-circle\" />\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"shopping-cart-table\">\r\n      <h2>Your Order</h2>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Item</th>\r\n            <th>Count</th>\r\n            <th>Price</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n        { items.map(renderRow) }\r\n        </tbody>\r\n      </table>\r\n\r\n      <div className=\"total\">\r\n        Total: ${total}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ shoppingCart: { cartItems, orderTotal }}) => {\r\n  return {\r\n    items: cartItems,\r\n    total: orderTotal\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onIncrease: bookAddedToCart,\r\n  onDecrease: bookRemovedFromCart,\r\n  onDelete: allBooksRemovedFromCart\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartTable);","import React from 'react';\r\nimport BookList from '../book-list';\r\nimport ShoppingCartTable from '../shopping-cart-table/shopping-cart-table';\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div>\r\n      <BookList />\r\n      <ShoppingCartTable />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport ShoppingCartTable from '../shopping-cart-table/shopping-cart-table';\r\n\r\nconst CartPage = () => {\r\n  return (\r\n    <div>\r\n      Cart Page\r\n      <ShoppingCartTable />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartPage;","import App from './app';\r\n\r\nexport default App;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport ShopHeader from '../shop-header';\r\nimport { HomePage, CartPage } from '../pages';\r\n\r\nimport './app.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <main role=\"main\" className=\"container\">\r\n      <ShopHeader />\r\n      <Switch>\r\n        <Route path=\"/\" component={HomePage} exact />\r\n\r\n        <Route path=\"/cart\" component={CartPage} />\r\n      </Switch>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default App;","import ErrorBoundry from './error-boundry';\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\n\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n\r\n  state = {\r\n    hasError: false\r\n  }\r\n\r\n  componentDidCatch() {\r\n    this.setState({\r\n      hasError: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator />\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}","export default class BookstoreService {\r\n\r\n  data = [\r\n    {\r\n      id: 1,\r\n      title: 'Production-Ready Microservices',\r\n      author: 'Susan J. Fowler',\r\n      price: 32,\r\n      coverImage: 'https://images-na.ssl-images-amazon.com/images/I/41yJ75gpV-L._SX381_BO1,204,203,200_.jpg'},\r\n    { \r\n      id: 2,\r\n      title: 'Release It!',\r\n      author: 'Michael T. Nygard',\r\n      price: 45,\r\n      coverImage: 'https://images-na.ssl-images-amazon.com/images/I/414CRjLjwgL._SX403_BO1,204,203,200_.jpg'}\r\n    ];\r\n\r\n  getBooks() {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve(this.data)\r\n      }, 700);\r\n    });\r\n  }\r\n}","const updateBookList = (state, action) => {\r\n\r\n  if (state === undefined) {\r\n    return {\r\n      books: [],\r\n      loading: true,\r\n      error: null\r\n    };\r\n  }\r\n\r\n  switch (action.type) {\r\n    case 'FETCH_BOOKS_REQUEST':\r\n      return {\r\n        books: [],\r\n        loading: true,\r\n        error: null\r\n      };\r\n\r\n    case 'FETCH_BOOKS_SUCCESS':\r\n      return {\r\n        books: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case 'FETCH_BOOKS_FAILURE':\r\n      return {\r\n        books: [],\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n\r\n    default:\r\n      return state.bookList;\r\n  }\r\n};\r\n\r\nexport default updateBookList;","const updateCartItems = (cartItems, item, idx) => {\r\n\r\n  if (item.count === 0) {\r\n    return [\r\n      ...cartItems.slice(0, idx),\r\n      ...cartItems.slice(idx + 1)\r\n    ];\r\n  }\r\n\r\n  if (idx === -1) {\r\n    return [\r\n      ...cartItems,\r\n      item\r\n    ];\r\n  }\r\n\r\n  return [\r\n    ...cartItems.slice(0, idx),\r\n    item,\r\n    ...cartItems.slice(idx + 1)\r\n  ];\r\n};\r\n\r\nconst updateCartItem = (book, item = {}, quantity) => {\r\n\r\n  const {\r\n    id = book.id,\r\n    count = 0,\r\n    title = book.title,\r\n    total = 0 } = item;\r\n\r\n  return {\r\n    id,\r\n    title,\r\n    count: count + quantity,\r\n    total: total + quantity*book.price\r\n  };\r\n};\r\n\r\nconst updateOrder = (state, bookId, quantity) => {\r\n  const { bookList: { books }, shoppingCart: { cartItems, orderTotal }} = state;\r\n  \r\n  const book = books.find(({id}) => id === bookId);\r\n  const itemIndex = cartItems.findIndex(({id}) => id === bookId);\r\n  const item = cartItems[itemIndex];\r\n\r\n  const newItem = updateCartItem(book, item, quantity);\r\n  return {\r\n    orderTotal: (book.price * quantity) + orderTotal,\r\n    cartItems: updateCartItems(cartItems, newItem, itemIndex)\r\n  };\r\n};\r\n\r\nconst updateShoppingCart = (state, action) => {\r\n\r\n  if (state === undefined) {\r\n    return {\r\n      cartItems: [],\r\n      orderTotal: 0\r\n    }\r\n  }\r\n\r\n  switch(action.type) {\r\n    case 'BOOK_ADDED_TO_CART':\r\n      return updateOrder(state, action.payload, 1);\r\n\r\n    case 'BOOK_REMOVED_FROM_CART':\r\n      return updateOrder(state, action.payload, -1);\r\n\r\n    case 'ALL_BOOKS_REMOVED_FROM_CART':\r\n      const item = state.shoppingCart.cartItems.find(({id}) => id === action.payload);\r\n      return updateOrder(state, action.payload, -item.count);\r\n\r\n    default:\r\n      return state.shoppingCart;\r\n  }\r\n};\r\n\r\nexport default updateShoppingCart;","import updateBookList from './book-list';\r\nimport updateShoppingCart from './shopping-cart';\r\n\r\nconst reducer = (state, action) => {\r\n  return {\r\n    bookList: updateBookList(state, action),\r\n    shoppingCart: updateShoppingCart(state, action)\r\n  };\r\n};\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\n\r\nimport App from './components/app';\r\nimport ErrorBoundry from './components/error-boundry';\r\nimport BookstoreService from './services/bookstore-service';\r\nimport { BookstoreServiceProvider } from './components/book-service-context';\r\n\r\nimport store from './store';\r\n\r\nconst bookStoreService = new BookstoreService();\r\n\r\nReactDom.render(\r\n  <Provider store={store}>\r\n    <ErrorBoundry>\r\n      <BookstoreServiceProvider value={bookStoreService}>\r\n        <Router>\r\n          <App/>\r\n        </Router>\r\n      </BookstoreServiceProvider>\r\n    </ErrorBoundry>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}